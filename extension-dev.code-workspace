{
  "folders": [
    {
      "name": "Client",
      "path": "."
    },
    {
      "name": "Server",
      "path": "../PowerShellEditorServices"
    }
  ],
  "extensions": {
    "recommendations": [
      "connor4312.esbuild-problem-matchers",
      "davidanson.vscode-markdownlint",
      "dbaeumer.vscode-eslint",
      "editorconfig.editorconfig",
      "github.vscode-github-actions",
      "GitHub.vscode-pull-request-github",
      "hbenl.vscode-mocha-test-adapter",
      "josefpihrt-vscode.roslynator",
      "ms-dotnettools.csharp",
      "ms-vscode.extension-test-runner",
      "ms-vscode.powershell",
      "redhat.vscode-yaml"
    ]
  },
  "settings": {
    "window.title": "PowerShell VS Code Extension Development",
    "debug.onTaskErrors": "prompt",
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.associations": {
      "**/snippets/*.json": "jsonc", // Use JSONC instead of JSON because that's how VS Code interprets snippet files, and it enables better source documentation.
      "**/.vsts-ci/**/*.yml": "azure-pipelines"
    },
    // Ignore the Markdown rule:
    "markdownlint.config": {
      "MD024": false // no-duplicate-header
    },
    "powershell.codeFormatting.autoCorrectAliases": true,
    "powershell.codeFormatting.avoidSemicolonsAsLineTerminators": true,
    "powershell.codeFormatting.newLineAfterCloseBrace": false,
    "powershell.codeFormatting.trimWhitespaceAroundPipe": true,
    "powershell.codeFormatting.useCorrectCasing": true,
    "powershell.codeFormatting.whitespaceBeforeOpenBrace": false,
    "powershell.codeFormatting.whitespaceBetweenParameters": true,
    "powershell.codeFormatting.pipelineIndentationStyle": "IncreaseIndentationForFirstPipeline",
    "typescript.tsdk": "Client/node_modules/typescript/lib", // Lock the TypeScript SDK path to the version we use
    "typescript.format.semicolons": "insert", // Code actions like "organize imports" ignore ESLint, so we need this here
    "eslint.format.enable": true, // Enable ESLint as defaut formatter so quick fixes can be applied directly
    "[typescript]": {
      "editor.defaultFormatter": "dbaeumer.vscode-eslint",
      "editor.formatOnPaste": true,
      "editor.formatOnSave": true,
      "editor.formatOnSaveMode": "modificationsIfAvailable"
    },
    "powershell.cwd": "Client"
  },
  "tasks": {
    "version": "2.0.0",
    "windows": {
      "options": {
        "shell": {
          "executable": "pwsh.exe",
          "args": ["-NoProfile", "-ExecutionPolicy", "Bypass", "-Command"]
        }
      }
    },
    "linux": {
      "options": {
        "shell": {
          "executable": "pwsh",
          "args": ["-NoProfile", "-Command"]
        }
      }
    },
    "osx": {
      "options": {
        "shell": {
          "executable": "/usr/local/bin/pwsh",
          "args": ["-NoProfile", "-Command"]
        }
      }
    },
    "tasks": [
      {
        "label": "Build",
        "type": "shell",
        "options": {
          "cwd": "${workspaceFolder:Client}"
        },
        "command": "Invoke-Build Build",
        "problemMatcher": ["$msCompile", "$tsc"],
        "group": {
          "kind": "build",
          "isDefault": true
        }
      },
      {
        "label": "Test Client",
        "type": "shell",
        "options": {
          "cwd": "${workspaceFolder:Client}"
        },
        "command": "Invoke-Build Test",
        "problemMatcher": ["$msCompile", "$tsc"],
        "group": {
          "kind": "test",
          "isDefault": true
        }
      },
      {
        "label": "Test Server",
        "type": "shell",
        "options": {
          "cwd": "${workspaceFolder:Server}"
        },
        "problemMatcher": ["$msCompile"],
        "command": "Invoke-Build TestServerPS72",
        "group": {
          "kind": "test",
          "isDefault": true
        }
      },
      {
        "label": "Invoke-Build Client",
        "type": "shell",
        "options": {
          "cwd": "${workspaceFolder:Client}"
        },
        "command": "Invoke-Build ${input:clientBuildCommand}",
        "group": "build"
      },
      {
        "label": "Invoke-Build Server",
        "type": "shell",
        "options": {
          "cwd": "${workspaceFolder:Server}"
        },
        "command": "Invoke-Build ${input:serverBuildCommand}",
        "group": "build"
      }
    ],
    "inputs": [
      {
        "type": "pickString",
        "id": "clientBuildCommand",
        "description": "Which Invoke-Build Client Task?",
        "options": ["Restore", "Clean", "Build", "Test", "Package"],
        "default": "Clean"
      },
      {
        "type": "pickString",
        "id": "serverBuildCommand",
        "description": "Which Invoke-Build Server Task?",
        "options": [
          "SetupDotNet",
          "BinClean",
          "Clean",
          "Build",
          "Test",
          "TestServer",
          "TestServerPS72",
          "TestE2E"
        ],
        "default": "Clean"
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        // https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md
        "name": "Attach to Editor Services",
        "type": "coreclr",
        "request": "attach",
        "processId": "${command:pickProcess}",
        "justMyCode": false,
        "suppressJITOptimizations": true,
        "symbolOptions": {
          "searchPaths": [],
          "searchMicrosoftSymbolServer": true,
          "searchNuGetOrgSymbolServer": true
        },
        "presentation": {
          "hidden": false,
          "group": "test",
          "order": 3
        }
      }
    ]
  }
}
